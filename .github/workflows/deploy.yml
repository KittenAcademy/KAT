# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Set up private settings example
        run: mv ./src/privatesettings.ts.example.txt ./src/privatesettings.ts

      - name: Build
        run: npm run build
        
      - name: Generate deployment package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Beanstalk Deploy
        # You may pin to the exact commit or the version.
        # uses: einaregilsson/beanstalk-deploy@6f594ded1b0a22c5e5aa1088e7c58dc5816c92ea
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          # AWS Access Key
          aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
          # AWS Secret Key
          aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
          # AWS Region
          region: 'us-west-2'
          # Beanstalk application name
          application_name: 'Kitten Academy'
          # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
          environment_name: 'Kittenacademy-env'
          # Version label for new Beanstalk version
          version_label: "my-app-${{ steps.format-time.outputs.replaced }}"
          # Zip file with the version to deploy. If skipped the action will deploy existing version.
          deployment_package: 'deploy.zip'
          # Whether the action should skip creating a new bucket and use the given one to upload the deployment package to instead. When omitted the actions will (try to) create a new one during deployment.
        

      - name: Deployed!
        run: echo App deployed to ELB
